package THEPackage;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JMenuItem;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kaihultmann
 */
public class QuizGUI extends javax.swing.JFrame {

    private QuizControlInterface control;
    private String currentChoice;

    public QuizGUI() {
        initComponents();
        initializeProgram();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        getQuestionTextField = new javax.swing.JTextField();
        getAnswerTextField = new javax.swing.JTextField();
        addWordButton = new javax.swing.JButton();
        checkIfAnswerIsCorrectLabel = new javax.swing.JLabel();
        getAnswerButton = new javax.swing.JButton();
        getQuestionLabel = new javax.swing.JLabel();
        getQuestionButton = new javax.swing.JButton();
        getCategoryLabel = new javax.swing.JLabel();
        getAnswerLabel = new javax.swing.JLabel();
        getLookupButton = new javax.swing.JButton();
        helpTextLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenuButton = new javax.swing.JMenu();
        loadListMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        gamesMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quiz Game");

        getQuestionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getQuestionTextFieldActionPerformed(evt);
            }
        });

        getAnswerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAnswerTextFieldActionPerformed(evt);
            }
        });

        addWordButton.setText("Add Words");
        addWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordButtonActionPerformed(evt);
            }
        });

        checkIfAnswerIsCorrectLabel.setText("Is it the correct guess?");

        getAnswerButton.setText("Guess");
        getAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAnswerButtonActionPerformed(evt);
            }
        });

        getQuestionLabel.setText("Question:");

        getQuestionButton.setText("Get Question");
        getQuestionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getQuestionButtonActionPerformed(evt);
            }
        });

        getCategoryLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        getCategoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getCategoryLabel.setText("Category");

        getAnswerLabel.setText("Answer:");

        getLookupButton.setText("Look up question");
        getLookupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getLookupButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(getQuestionTextField)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, getAnswerTextField)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(getQuestionButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(getAnswerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(addWordButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(checkIfAnswerIsCorrectLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(80, 80, 80)
                                .add(getLookupButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, getAnswerLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, getQuestionLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(103, 103, 103))
                            .add(getCategoryLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(getCategoryLabel)
                .add(18, 18, 18)
                .add(getQuestionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(getQuestionTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(getAnswerLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(getAnswerTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addWordButton)
                    .add(getAnswerButton)
                    .add(getQuestionButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkIfAnswerIsCorrectLabel)
                    .add(getLookupButton))
                .add(33, 33, 33))
        );

        helpTextLabel.setText("Kan du se den her er der noget galt");

        fileMenuButton.setText("File");

        loadListMenuItem.setText("Load List");
        loadListMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadListMenuItemActionPerformed(evt);
            }
        });
        fileMenuButton.add(loadListMenuItem);

        exitMenuItem.setText("Save List");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenuButton.add(exitMenuItem);

        jMenuItem3.setText("Exit Program");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        fileMenuButton.add(jMenuItem3);

        jMenuBar1.add(fileMenuButton);

        gamesMenu.setText("Games");
        jMenuBar1.add(gamesMenu);

        helpMenuItem.setText("Help");

        aboutMenuItem.setText("Help");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenuItem.add(aboutMenuItem);

        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        helpMenuItem.add(jMenuItem4);

        jMenuBar1.add(helpMenuItem);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(helpTextLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(helpTextLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getQuestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getQuestionButtonActionPerformed
        String add = control.currentGame().getRandomQuestion();
        if (add != null) {
            getQuestionTextField.setText(add);
        } else {
            helpTextLabel.setText("No words could be found in the list.");
        }
    }//GEN-LAST:event_getQuestionButtonActionPerformed

    private void getAnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAnswerButtonActionPerformed
        if (control.currentGame().checkGuess(getQuestionTextField.getText(), getAnswerTextField.getText())) {
            checkIfAnswerIsCorrectLabel.setForeground(Color.green);
            checkIfAnswerIsCorrectLabel.setText("Correct!");
        } else {
            checkIfAnswerIsCorrectLabel.setForeground(Color.red);
            checkIfAnswerIsCorrectLabel.setText("Wrong!");
        }
    }//GEN-LAST:event_getAnswerButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void getQuestionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getQuestionTextFieldActionPerformed
    }//GEN-LAST:event_getQuestionTextFieldActionPerformed

    private void addWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordButtonActionPerformed
        WordPair temp = new WordPair(getQuestionTextField.getText(), getAnswerTextField.getText());
        control.currentGame().addWordPair(temp);
        helpTextLabel.setText("'" + getQuestionTextField.getText() + "' has been added to the list of questions.");
        getQuestionTextField.setText("");
        getAnswerTextField.setText("");



    }//GEN-LAST:event_addWordButtonActionPerformed

    private void getAnswerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAnswerTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getAnswerTextFieldActionPerformed

    private void loadListMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadListMenuItemActionPerformed
        if (control.loadGames()) {
            String[] temp = control.getGameNames();
            for (int x = 0; x < temp.length; x++) {
                JMenuItem item = new JMenuItem(temp[x]);
                item.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        JMenuItem itim = (JMenuItem) ae.getSource();
                        control.selectGame(itim.getText());
                        getCategoryLabel.setText(control.getSelectedGameName());
                        getQuestionLabel.setText(control.getQuestionLabelText());
                        getAnswerLabel.setText(control.getAnswerLabelText());
                        getQuestionButton.setText(control.getQuestionButtonText());
                        getAnswerButton.setText(control.getAnswerButtonText());
                        getLookupButton.setText(control.getLookupButtonText());

                        helpTextLabel.setText("Category chosen");
                    }
                });
                gamesMenu.add(item);
            }
            helpTextLabel.setText("List loaded.");
        } else {
            helpTextLabel.setText("List failed loading.");
        }

    }//GEN-LAST:event_loadListMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        control.saveQuizz();
        helpTextLabel.setText("List saved.");

    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        helpTextLabel.setText("Programmed by Kasper, Esben and Daniel, as a flow project.");

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void getLookupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getLookupButtonActionPerformed
        getAnswerTextField.setText(control.currentGame().Lookup(getQuestionTextField.getText()));
        helpTextLabel.setText("Solution found");
    }//GEN-LAST:event_getLookupButtonActionPerformed

    private void initializeProgram() {
        control = new QuizControl();
        helpTextLabel.setText("Welcome to Quiz Game");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addWordButton;
    private javax.swing.JLabel checkIfAnswerIsCorrectLabel;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenuButton;
    private javax.swing.JMenu gamesMenu;
    private javax.swing.JButton getAnswerButton;
    private javax.swing.JLabel getAnswerLabel;
    private javax.swing.JTextField getAnswerTextField;
    private javax.swing.JLabel getCategoryLabel;
    private javax.swing.JButton getLookupButton;
    private javax.swing.JButton getQuestionButton;
    private javax.swing.JLabel getQuestionLabel;
    private javax.swing.JTextField getQuestionTextField;
    private javax.swing.JMenu helpMenuItem;
    private javax.swing.JLabel helpTextLabel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem loadListMenuItem;
    // End of variables declaration//GEN-END:variables
}
